{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","posts","link","password","isStart","axios","create","baseURL","process","responseType","withCredentials","transformResponse","data","event","this","setState","target","name","value","ajax","get","then","msg","result","filter","e","message","chat","id","toString","index","post","option","chat_id","photo","file_id","caption","reply_markup","inline_keyboard","text","url","alert","className","type","onChange","handleChange","placeholder","map","onClick","send","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","versions","node","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAIMA,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,GACPC,KAAM,KACNC,SAAU,KACVC,SAAS,GANE,E,wCAWnB,WACI,OAAOC,IAAMC,OAAO,CAChBC,QAAQ,+BAAD,OAAiCC,iDAAjC,KACPC,aAAc,OACdC,iBAAiB,EACjBC,kBAAmB,CAAC,SAAUC,GAC1B,OAAOA,Q,0BAKnB,SAAaC,GACTC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,+BAGrD,WAAqB,IAAD,OAChBJ,KAAKK,OAAOC,IAAI,cAAcC,MAAK,SAACC,GAChC,EAAKP,SAAS,CAACd,MAAOqB,EAAIV,KAAKW,OAAOC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,SAA4ClB,mBAAjCiB,EAAEC,QAAQC,KAAKC,GAAGC,qB,kBAKzF,SAAKC,GACD,GAAGhB,KAAKd,MAAME,KAAM,CAChB,IAAM6B,EAAOjB,KAAKd,MAAMC,MAAM6B,GAAOJ,QAC/BM,EAAS,CACXC,QAASzB,iBACT0B,MAAOH,EAAKG,MAAM,GAAGC,QACrBC,QAASL,EAAKK,QACdC,aAAc,CACVC,gBAAiB,CACb,CAAC,CACGC,KAAM,gCACNC,IAAK1B,KAAKd,MAAME,UAKhCY,KAAKK,OAAOY,KAAK,YAAaC,QAC3BS,MAAM,0B,oBAIjB,WAAU,IAAD,OACL,OACI,cAAC,IAAD,CAAWC,UAAU,MAArB,SAC6BlC,eAAxBM,KAAKd,MAAMG,SAA8C,gCACtD,8CACA,cAAC,IAAD,CAAOc,KAAK,OAAO0B,KAAK,SAASzB,MAAOJ,KAAKd,MAAME,KAAM0C,SAAU,SAACnB,GAAD,OAAO,EAAKoB,aAAapB,IAAIqB,YAAY,oBAC3GhC,KAAKd,MAAMC,MAAM8C,KAAI,SAACtB,EAAEK,GAAH,OAAa,eAAC,IAAD,WAC/B,eAAC,IAAD,WAAWA,EAAM,EAAjB,KAAsBL,EAAEC,QAAQU,QAAUX,EAAEC,QAAQU,QAAUX,EAAEC,QAAQa,QACvEd,EAAEC,QAAQU,QAAU,cAAC,IAAD,CAAQY,QAAS,kBAAM,EAAKC,KAAKnB,IAAjC,kBAAwD,YAGzE,8BACR,cAAC,IAAD,CAAOb,KAAK,WAAW0B,KAAK,SAASzB,MAAOJ,KAAKd,MAAMG,SAAUyC,SAAU,SAACnB,GAAD,OAAO,EAAKoB,aAAapB,IAAIqB,YAAY,qB,GApEtHI,IAAMC,WA8ETrD,O,gCCtEAsD,IAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,gCCPd,uFAKA7C,EAAQoD,SAASC,KAAO,GAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,SAM1Bd,e","file":"static/js/main.9d059f77.chunk.js","sourcesContent":["import {Container, Button, Input, Card, CardText, CardTitle} from 'reactstrap';\nimport React from 'react';\nimport axios from \"axios\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            link: null,\n            password: null,\n            isStart: false\n        }\n\n    }\n\n    ajax () {\n        return axios.create({\n            baseURL: `https://api.telegram.org/bot${process.env.REACT_APP_BOT_TOKEN}/`,\n            responseType: 'json',\n            withCredentials: false,\n            transformResponse: [function (data) {\n                return data;\n            }]\n        })\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    componentDidMount() {\n        this.ajax().get('getUpdates').then((msg) => {\n            this.setState({posts: msg.data.result.filter(e => e.message && e.message.chat.id.toString() === process.env.REACT_APP_POST_GROUP_ID)})\n        })\n\n    }\n\n    send(index) {\n        if(this.state.link) {\n            const post = this.state.posts[index].message\n            const option = {\n                chat_id: process.env.REACT_APP_POST_CHANNEL_ID,\n                photo: post.photo[0].file_id,\n                caption: post.caption,\n                reply_markup: {\n                    inline_keyboard: [\n                        [{\n                            text: 'ðŸ”—Xem chi tiáº¿t',\n                            url: this.state.link\n                        }]\n                    ]\n                }\n            }\n            this.ajax().post('sendPhoto', option)\n        } else alert('you need to fill url')\n\n    }\n\n    render() {\n        return (\n            <Container className=\"App\">\n                {this.state.password === process.env.REACT_APP_PASSWORD ? <div>\n                    <h1>Coinmoi post</h1>\n                    <Input name=\"link\" type=\"string\" value={this.state.link} onChange={(e) => this.handleChange(e)} placeholder=\"input link here\"/>\n                    {this.state.posts.map((e,index) => <Card>\n                        <CardText>{index+1}. {e.message.caption ? e.message.caption : e.message.text}</CardText>\n                        {e.message.caption ? <Button onClick={() => this.send(index)}>Send</Button>: ''}\n                    </Card>)}\n\n                    </div>: <div>\n                    <Input name=\"password\" type=\"string\" value={this.state.password} onChange={(e) => this.handleChange(e)} placeholder=\"password\"/>\n                </div>\n                }\n\n            </Container>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nprocess.versions.node = 10;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}